{"ast":null,"code":"var _jsxFileName = \"/Users/maksimakubov/TodoList/src/todo/todoItem.js\";\nimport React, { useContext } from \"react\";\nimport PropTypes from 'prop-types';\nimport Context from \"../context\";\n\nfunction TodoItem({\n  todo,\n  index,\n  onChange\n}) {\n  const {\n    removeTodo\n  } = useContext(Context);\n  const classes = [];\n\n  if (todo.completed) {\n    classes.push('done');\n  }\n\n  const styles = {\n    li: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      padding: '.5rem 1rem',\n      border: '1px solid #ccc',\n      borderRadius: '50px',\n      marginBottom: '.5rem'\n    },\n    input: {\n      margin: '1rem'\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"li\", {\n    style: styles.li,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.completed,\n    style: styles.input,\n    onChange: () => onChange(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, index + 1), \"\\xA0\", todo.title), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"rm\",\n    onClick: removeTodo.bind(null, todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"));\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired\n};\nexport default TodoItem;","map":{"version":3,"sources":["/Users/maksimakubov/TodoList/src/todo/todoItem.js"],"names":["React","useContext","PropTypes","Context","TodoItem","todo","index","onChange","removeTodo","classes","completed","push","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","margin","join","id","title","bind","propTypes","object","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAlB,EAA2C;AACvC,QAAM;AAACC,IAAAA;AAAD,MAAeP,UAAU,CAACE,OAAD,CAA/B;AACA,QAAMM,OAAO,GAAG,EAAhB;;AACA,MAAIJ,IAAI,CAACK,SAAT,EAAoB;AAChBD,IAAAA,OAAO,CAACE,IAAR,CAAa,MAAb;AACH;;AAED,QAAMC,MAAM,GAAG;AACXC,IAAAA,EAAE,EAAE;AACAC,MAAAA,OAAO,EAAE,MADT;AAEAC,MAAAA,cAAc,EAAE,eAFhB;AAGAC,MAAAA,UAAU,EAAE,QAHZ;AAIAC,MAAAA,OAAO,EAAE,YAJT;AAKAC,MAAAA,MAAM,EAAE,gBALR;AAMAC,MAAAA,YAAY,EAAE,MANd;AAOAC,MAAAA,YAAY,EAAE;AAPd,KADO;AAUXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL;AAVI,GAAf;AAeA,sBACI;AAAI,IAAA,KAAK,EAAEV,MAAM,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACc,IAAR,CAAa,GAAb,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,OAAO,EAAElB,IAAI,CAACK,SAFlB;AAGI,IAAA,KAAK,EAAEE,MAAM,CAACS,KAHlB;AAII,IAAA,QAAQ,EAAE,MAAMd,QAAQ,CAACF,IAAI,CAACmB,EAAN,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASlB,KAAK,GAAG,CAAjB,CANJ,UAQKD,IAAI,CAACoB,KARV,CADJ,eAYI;AAAQ,IAAA,SAAS,EAAC,IAAlB;AAAuB,IAAA,OAAO,EAAEjB,UAAU,CAACkB,IAAX,CAAgB,IAAhB,EAAsBrB,IAAI,CAACmB,EAA3B,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,CADJ;AAgBH;;AAEDpB,QAAQ,CAACuB,SAAT,GAAqB;AACjBtB,EAAAA,IAAI,EAAEH,SAAS,CAAC0B,MAAV,CAAiBC,UADN;AAEjBvB,EAAAA,KAAK,EAAEJ,SAAS,CAAC4B,MAFA;AAGjBvB,EAAAA,QAAQ,EAAEL,SAAS,CAAC6B,IAAV,CAAeF;AAHR,CAArB;AAMA,eAAezB,QAAf","sourcesContent":["import React, {useContext} from \"react\";\nimport PropTypes from 'prop-types'\nimport Context from \"../context\";\n\nfunction TodoItem({todo, index, onChange}) {\n    const {removeTodo} = useContext(Context)\n    const classes = []\n    if (todo.completed) {\n        classes.push('done')\n    }\n\n    const styles = {\n        li: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '.5rem 1rem',\n            border: '1px solid #ccc',\n            borderRadius: '50px',\n            marginBottom: '.5rem'\n        },\n        input: {\n            margin: '1rem'\n        }\n    }\n\n    return (\n        <li style={styles.li}>\n            <span className={classes.join(' ')}>\n                <input\n                    type='checkbox'\n                    checked={todo.completed}\n                    style={styles.input}\n                    onChange={() => onChange(todo.id)}/>\n                <strong>{index + 1}</strong>\n                &nbsp;\n                {todo.title}\n            </span>\n            {/*<button className='rm' onClick={ () => removeTodo(todo.id)}>&times;</button>*/}\n            <button className='rm' onClick={removeTodo.bind(null, todo.id)}>&times;</button>\n        </li>\n    )\n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    index: PropTypes.number,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default TodoItem"]},"metadata":{},"sourceType":"module"}