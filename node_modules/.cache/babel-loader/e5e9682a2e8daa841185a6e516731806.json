{"ast":null,"code":"var _jsxFileName = \"/Users/maksimakubov/TodoList/src/App.js\";\nimport React, { useEffect } from 'react';\nimport TodoList from \"./todo/todoList\";\nimport Context from \"./context\";\nimport Loader from \"./loader\";\nimport Modal from \"./Modal/Modal\";\nconst AddTodo = React.lazy(() => new Promise(resolve => {\n  setTimeout(() => {\n    resolve(import('./todo/addTodos'));\n  }, 500);\n}));\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos/?_limit=5').then(response => response.json()).then(todos => {\n      setTimeout(() => {\n        setTodos(todos);\n        setLoading(false);\n      }, 1500);\n    });\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]));\n  }\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      removeTodo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \" Todo List \"), /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddTodo, {\n    onCreate: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }), todos.length ? /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onToggle: toggleTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }) : loading ? null : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"No todos!\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maksimakubov/TodoList/src/App.js"],"names":["React","useEffect","TodoList","Context","Loader","Modal","AddTodo","lazy","Promise","resolve","setTimeout","App","todos","setTodos","useState","loading","setLoading","fetch","then","response","json","toggleTodo","id","map","todo","completed","removeTodo","filter","addTodo","title","concat","Date","now","length"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport TodoList from \"./todo/todoList\";\nimport Context from \"./context\";\nimport Loader from \"./loader\";\nimport Modal from \"./Modal/Modal\";\n\nconst AddTodo = React.lazy(() => new Promise(resolve => {\n    setTimeout(()=>{\n        resolve(import('./todo/addTodos'))\n    },500)\n}))\n\nfunction App() {\n    const [todos, setTodos] = React.useState([])\n    const [loading, setLoading] = React.useState(true)\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/todos/?_limit=5')\n            .then(response => response.json())\n            .then(todos => {\n                setTimeout(() => {\n                    setTodos(todos)\n                    setLoading(false)\n                }, 1500)\n            })\n    }, [])\n\n    function toggleTodo(id) {\n        setTodos(todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed\n                }\n                return todo\n            })\n        )\n    }\n\n    function removeTodo(id) {\n        setTodos(todos.filter(todo => todo.id !== id))\n\n    }\n\n    function addTodo(title) {\n        setTodos(todos.concat([{\n            title,\n            id: Date.now(),\n            completed: false\n        }]))\n\n    }\n\n    return (\n        <Context.Provider value={{removeTodo}}>\n            <div className='wrapper'>\n                <h1> Todo List </h1>\n                <Modal/>\n                <React.Suspense fallback={<Loader/>}>\n                <AddTodo onCreate={addTodo}/>\n                </React.Suspense>\n                {loading && <Loader/>}\n                {todos.length ? (\n                    <TodoList todos={todos} onToggle={toggleTodo}/>\n                ) : loading ? null : (\n                    <p>No todos!</p>\n                )}\n            </div>\n        </Context.Provider>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}